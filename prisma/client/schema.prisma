// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum BarcodeType {
  CODE128
  CODE39
}

enum TaxType {
  EXCLUSIVE
  INCLUSIVE
}

enum ProductType {
  STANDARD
  VARIABLE
}

enum PaymentType {
  MONTH
  DAYS
  YEARS
}

model ProductCategory {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  status    Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  Product   Product[]
}

model Brand {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String
  brandImage  String?
  status      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  Product     Product[]
}

model Variations {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  type      String
  status    Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Unit {
  id             Int       @id @default(autoincrement())
  name           String    @unique
  shortName      String    @db.VarChar(100)
  baseUnitId     Int
  baseUnit       BaseUnit  @relation(fields: [baseUnitId], references: [id])
  status         Boolean   @default(true)
  operator       String    @db.VarChar(100)
  operationValue Int       @db.Integer
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @updatedAt
  saleUnit       Product[] @relation(name: "SaleUnit")
  purchaseUnit   Product[] @relation(name: "PurchaseUnit")
}

model BaseUnit {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  productUnit Product[]
  Unit        Unit[]
}

model Product {
  id                  Int             @id @default(autoincrement())
  name                String          @unique
  barcode             String          @unique
  barcodeType         BarcodeType
  categoryId          Int
  category            ProductCategory @relation(fields: [categoryId], references: [id])
  brandId             Int
  brand               Brand           @relation(fields: [brandId], references: [id])
  orderTax            Int?            @default(0)
  taxType             TaxType
  productImage        String?
  productType         ProductType
  productCost         Decimal         @db.Decimal(10, 2)
  productPrice        Decimal         @db.Decimal(10, 2)
  productUnitId       Int
  productUnit         BaseUnit        @relation(fields: [productUnitId], references: [id])
  saleUnitId          Int
  saleUnit            Unit            @relation(name: "SaleUnit", fields: [saleUnitId], references: [id])
  purchaseUnitId      Int
  purchaseUnit        Unit            @relation(name: "PurchaseUnit", fields: [purchaseUnitId], references: [id])
  stockAlert          Int?            @default(0)
  warrantyPeriod      Int?            @default(0)
  warrantyPaymentType PaymentType
  warrantyTerms       String?
  isGuaranteed        Boolean         @default(false)
  createdAt           DateTime        @default(now())
  updatedAt           DateTime?       @updatedAt
  status              Boolean         @default(true)
}
